/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    images: Image;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    images: ImagesSelect<false> | ImagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    startPage: StartPage;
    aboutUs: AboutUs;
    info: Info;
    Osa: Osa;
    Speech: Speech;
  };
  globalsSelect: {
    startPage: StartPageSelect<false> | StartPageSelect<true>;
    aboutUs: AboutUsSelect<false> | AboutUsSelect<true>;
    info: InfoSelect<false> | InfoSelect<true>;
    Osa: OsaSelect<false> | OsaSelect<true>;
    Speech: SpeechSelect<false> | SpeechSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images".
 */
export interface Image {
  id: number;
  alt: string;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'images';
        value: number | Image;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images_select".
 */
export interface ImagesSelect<T extends boolean = true> {
  alt?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "startPage".
 */
export interface StartPage {
  id: number;
  startPageTitle?: string | null;
  startPageSubTitle?: string | null;
  startPagePosts?:
    | {
        blockTitle?: string | null;
        blockTitlealignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockTitleStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockSubtitle?: string | null;
        blockSubtitlealignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockSubtitleStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockText?: string | null;
        blockTextalignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockTextStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockImage?: (number | null) | Image;
        /**
         * In "Full width", the image will be rendered above the text. On mobile, the image will always be displayed in the same layout as in full width.
         */
        blockImageSetting?: ('fullWidth' | 'rightSide' | 'leftSide') | null;
        linkBtn?: ('startPage' | 'aboutUsPage' | 'infoPage' | 'osaPage' | 'speechPage') | null;
        linkBtnText?: string | null;
        id?: string | null;
      }[]
    | null;
  data?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aboutUs".
 */
export interface AboutUs {
  id: number;
  aboutUsTitle?: string | null;
  aboutUsSubTitle?: string | null;
  aboutUsPosts?:
    | {
        blockTitle?: string | null;
        blockTitlealignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockTitleStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockSubtitle?: string | null;
        blockSubtitlealignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockSubtitleStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockText?: string | null;
        blockTextalignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockTextStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockImage?: (number | null) | Image;
        /**
         * In "Full width", the image will be rendered above the text. On mobile, the image will always be displayed in the same layout as in full width.
         */
        blockImageSetting?: ('fullWidth' | 'rightSide' | 'leftSide') | null;
        linkBtn?: ('startPage' | 'aboutUsPage' | 'infoPage' | 'osaPage' | 'speechPage') | null;
        linkBtnText?: string | null;
        id?: string | null;
      }[]
    | null;
  data?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "info".
 */
export interface Info {
  id: number;
  infoTitle?: string | null;
  infoSubTitle?: string | null;
  infoPosts?:
    | {
        blockTitle?: string | null;
        blockTitlealignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockTitleStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockSubtitle?: string | null;
        blockSubtitlealignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockSubtitleStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockText?: string | null;
        blockTextalignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockTextStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockImage?: (number | null) | Image;
        /**
         * In "Full width", the image will be rendered above the text. On mobile, the image will always be displayed in the same layout as in full width.
         */
        blockImageSetting?: ('fullWidth' | 'rightSide' | 'leftSide') | null;
        linkBtn?: ('startPage' | 'aboutUsPage' | 'infoPage' | 'osaPage' | 'speechPage') | null;
        linkBtnText?: string | null;
        id?: string | null;
      }[]
    | null;
  data?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Osa".
 */
export interface Osa {
  id: number;
  OsaTitle?: string | null;
  OsaSubTitle?: string | null;
  OsaPosts?:
    | {
        blockTitle?: string | null;
        blockTitlealignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockTitleStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockSubtitle?: string | null;
        blockSubtitlealignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockSubtitleStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockText?: string | null;
        blockTextalignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockTextStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockImage?: (number | null) | Image;
        /**
         * In "Full width", the image will be rendered above the text. On mobile, the image will always be displayed in the same layout as in full width.
         */
        blockImageSetting?: ('fullWidth' | 'rightSide' | 'leftSide') | null;
        linkBtn?: ('startPage' | 'aboutUsPage' | 'infoPage' | 'osaPage' | 'speechPage') | null;
        linkBtnText?: string | null;
        id?: string | null;
      }[]
    | null;
  data?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Speech".
 */
export interface Speech {
  id: number;
  SpeechTitle?: string | null;
  SpeechSubTitle?: string | null;
  SpeechPosts?:
    | {
        blockTitle?: string | null;
        blockTitlealignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockTitleStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockSubtitle?: string | null;
        blockSubtitlealignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockSubtitleStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockText?: string | null;
        blockTextalignment?: ('textAlginmentRight' | 'textAlginmentCenter' | 'textAlginmentLeft') | null;
        blockTextStyle?: ('textStyleNormal' | 'textStyleItalic' | 'textStyleBold') | null;
        blockImage?: (number | null) | Image;
        /**
         * In "Full width", the image will be rendered above the text. On mobile, the image will always be displayed in the same layout as in full width.
         */
        blockImageSetting?: ('fullWidth' | 'rightSide' | 'leftSide') | null;
        linkBtn?: ('startPage' | 'aboutUsPage' | 'infoPage' | 'osaPage' | 'speechPage') | null;
        linkBtnText?: string | null;
        id?: string | null;
      }[]
    | null;
  data?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "startPage_select".
 */
export interface StartPageSelect<T extends boolean = true> {
  startPageTitle?: T;
  startPageSubTitle?: T;
  startPagePosts?:
    | T
    | {
        blockTitle?: T;
        blockTitlealignment?: T;
        blockTitleStyle?: T;
        blockSubtitle?: T;
        blockSubtitlealignment?: T;
        blockSubtitleStyle?: T;
        blockText?: T;
        blockTextalignment?: T;
        blockTextStyle?: T;
        blockImage?: T;
        blockImageSetting?: T;
        linkBtn?: T;
        linkBtnText?: T;
        id?: T;
      };
  data?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aboutUs_select".
 */
export interface AboutUsSelect<T extends boolean = true> {
  aboutUsTitle?: T;
  aboutUsSubTitle?: T;
  aboutUsPosts?:
    | T
    | {
        blockTitle?: T;
        blockTitlealignment?: T;
        blockTitleStyle?: T;
        blockSubtitle?: T;
        blockSubtitlealignment?: T;
        blockSubtitleStyle?: T;
        blockText?: T;
        blockTextalignment?: T;
        blockTextStyle?: T;
        blockImage?: T;
        blockImageSetting?: T;
        linkBtn?: T;
        linkBtnText?: T;
        id?: T;
      };
  data?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "info_select".
 */
export interface InfoSelect<T extends boolean = true> {
  infoTitle?: T;
  infoSubTitle?: T;
  infoPosts?:
    | T
    | {
        blockTitle?: T;
        blockTitlealignment?: T;
        blockTitleStyle?: T;
        blockSubtitle?: T;
        blockSubtitlealignment?: T;
        blockSubtitleStyle?: T;
        blockText?: T;
        blockTextalignment?: T;
        blockTextStyle?: T;
        blockImage?: T;
        blockImageSetting?: T;
        linkBtn?: T;
        linkBtnText?: T;
        id?: T;
      };
  data?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Osa_select".
 */
export interface OsaSelect<T extends boolean = true> {
  OsaTitle?: T;
  OsaSubTitle?: T;
  OsaPosts?:
    | T
    | {
        blockTitle?: T;
        blockTitlealignment?: T;
        blockTitleStyle?: T;
        blockSubtitle?: T;
        blockSubtitlealignment?: T;
        blockSubtitleStyle?: T;
        blockText?: T;
        blockTextalignment?: T;
        blockTextStyle?: T;
        blockImage?: T;
        blockImageSetting?: T;
        linkBtn?: T;
        linkBtnText?: T;
        id?: T;
      };
  data?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Speech_select".
 */
export interface SpeechSelect<T extends boolean = true> {
  SpeechTitle?: T;
  SpeechSubTitle?: T;
  SpeechPosts?:
    | T
    | {
        blockTitle?: T;
        blockTitlealignment?: T;
        blockTitleStyle?: T;
        blockSubtitle?: T;
        blockSubtitlealignment?: T;
        blockSubtitleStyle?: T;
        blockText?: T;
        blockTextalignment?: T;
        blockTextStyle?: T;
        blockImage?: T;
        blockImageSetting?: T;
        linkBtn?: T;
        linkBtnText?: T;
        id?: T;
      };
  data?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}